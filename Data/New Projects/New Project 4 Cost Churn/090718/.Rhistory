pid_ = 4
{
initial_path <- paste("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project ", pid_, " Cost Churn", sep = '')
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"Data.csv", sep = ''), sep=";")
}
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
plot(y=my_data$Files, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
initial_path <- paste("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project ", pid_, " Cost Churn", sep = '')
initial_path <- paste("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project ", pid_, " Cost Churn", sep = '')
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"ChurnEstimation.csv", sep = ''), sep=";")
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"ChurnEstimations.csv", sep = ''), sep=";")
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"ChurnEstimationsg.csv", sep = ''), sep=";")
head(my.data._)
data.col <- colnames(my.data_._)
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
plot(y=my_data$Files, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
plot(y=my_data$Files, x=my_data$ModuleDateRevisionId, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
plot(y=my_data$Estimation, x=my_data$ModuleDateRevisionId, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
plot(y=my_data$Actual, x=my_data$ModuleDateRevisionId, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
setwd("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project 4 Cost Churn/090718")
library("ggplot2")
library("dplyr")
pid_ = 4
{
initial_path <- paste("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project ", pid_, " Cost Churn", sep = '')
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"ChurnEstimationsg.csv", sep = ''), sep=";")
}
head(my.data._)
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
head(my.data._)
NROW(my_data)
head(my_data)
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
my_data <- sub_my_data
head(my_data)
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & ModulePath == 'Font-Awesome/docs/assets/css/')
my_data <- sub_my_data
head(my_data)
NROW(my_data)
plot(y=my_data$Actual, x=my_data$ModuleDateRevisionId, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & ModulePath == 'Font-Awesome/docs/assets/css/')
my_data <- sub_my_data[order(sub_my_data$Date),]
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o')
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=2)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=2)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=3)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=1)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=4)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=3)
par(mar=c(15,4,4,2))
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=3)
par(las=2)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=3)
par(las=2)
plot(y=my_data$Actual, x=my_data$Date, main=paste('colsnaa', " DateRevisionId plot", sep = " "), type='o', las=3)
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n', space=1)
par(las=2)
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n', space=1)
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n')
par(las=2)
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n')
par(las=2)
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n')
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o', xaxt='n')
plot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o')
ggplot(y=my_data$Actual,
x=my_data$Date,
main=paste('colsnaa', " DateRevisionId plot", sep = " "),
type='o')
ggplot(y=my_data$Actual,
x=my_data$Date,
type='o')+geom_point()
ggplot(my_data, aes(y=my_data$Actual,
x=my_data$Date))+geom_point()
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point()
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & ModulePath == 'Font-Awesome/docs/assets/css/')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & ModulePath == 'Font-Awesome/docs/assets/css/')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- my.data_._
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & ModulePath == 'Font-Awesome/docs/assets/css/')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data_._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
unique(my_data$Date)
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & Date='2016-10-24 15:42:21')
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
head(my.data._)
head(my_data)
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
NROW(my_data)
ggplot(my_data, aes(y=Files,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
pid_ = 4
my.data._<- read.csv2(paste("Project", 4, "ChurnEstimations09072018.csv", sep=""), sep=";")
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my.data._$ModuleLevel <- lengths(regmatches(my.data._$ModulePath, gregexpr("/", my.data._$ModulePath)))
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
head(my_data)
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Files,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
unique(my_data$Date)
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
unique(my_data$Date)
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
unique(my_data$Date)
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
head(my_data)
NROW(unique(my_data$Date))
NROW(unique(my_data$ModulePath))
sub_my_data <- subset(my.data_._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
head(my_data)
unique(my_data$Date)
NROW(unique(my_data$ModulePath))
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Files,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Files,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Actual,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
unique(my_data$Date)
NROW(unique(my_data$ModulePath))
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
head(my_data)
unique(my_data$Date)
NROW(unique(my_data$ModulePath))
unique(my_data$ModulePath)
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21' & ModulePath=='Font-Awesome/docs/assets/css/')
my_data <- sub_my_data[order(sub_my_data$Date),]
unique(my_data$ModulePath)
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
NROW(unique(my_data$ModulePath))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4)
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
unique(my_data$ModulePath)
my.data._<- read.csv2(paste("Project", 4, "ChurnEstimations09072018.csv", sep=""), sep=";")
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my.data._$ModuleLevel <- lengths(regmatches(my.data._$ModulePath, gregexpr("/", my.data._$ModulePath)))
sub_my_data <- subset(my.data._, ModuleLevel == 4 & Date=='2016-10-24 15:42:21')
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4)
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 4)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 1)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 2)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sub_my_data <- subset(my.data._, ModuleLevel == 3)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_lines() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=Date))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=ModuleDateRevisionId))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot(density(my_data$Files))
plot(density(my_data$Estimation))
plot(density(my_data$Actual))
pid_ = 4
pid_ = 4
{
initial_path <- paste("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project ", pid_, " Cost Churn", sep = '')
my.data_._ <- read.csv2(paste(initial_path, "/Project",pid_,"ChurnEstimationsg.csv", sep = ''), sep=";")
}
sub_my_data <- subset(my.data_._, ModuleLevel == 3)
my_data <- sub_my_data[order(sub_my_data$Date),]
ggplot(my_data, aes(y=Estimation,
x=ModuleDateRevisionId))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot(density(my_data$Actual))
plot(density(my_data$Estimation))
plot(density(my_data$Actual))
plot(density(my_data$Estimation))
ggplot(my_data, aes(y=Files,
x=ModuleDateRevisionId))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Files,
x=ModuleDateRevisionId))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(my_data, aes(y=Estimation,
x=ModuleDateRevisionId))+geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("/Users/omitobisam/Desktop/Thesis Data Import/New Projects/New Project 4 Cost Churn/090718")
library('dplyr')
library('dplyr')
library('ggplot2')
mydb = dbConnect(MySQL(), user='root', password='Sch..l1234', dbname='issuesminer', host='localhost')
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Name,
FileId,
Date,
Comment,
PreviousRevisionId,
Alias,
ProjectLOC,
CommitterId,
Extension,
ExtensionId,
FiletypeId,
created_at,
updated_at,
CommitId,
AuthorEmail,
AuthorName,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status
from VCSFileRevision limit 1')
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Name,
FileId,
Date,
Comment,
PreviousRevisionId,
Alias,
ProjectLOC,
CommitterId,
Extension,
ExtensionId,
FiletypeId,
created_at,
updated_at,
CommitId,
AuthorEmail,
AuthorName,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision limit 1')
count_of_record = fetch(rs_1, n=-1)
count_of_record
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Name,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where project Id = 4 limit 1')
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Name,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4 limit 1')
count_of_record = fetch(rs_1, n=-1)
head(count_of_record)
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Name,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4')
count_of_record = fetch(rs_1, n=-1)
head(count_of_record)
rs_1 = dbSendQuery(mydb,'select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4')
count_of_record = fetch(rs_1, n=-1)
head(count_of_record)
rs_1 = dbSendQuery(mydb,"select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4 AND
Extension IN ('.cpp', '.cs', '.php', '.java', '.cxx', '.hpp','.js','.d', '.fs', '.vb', '.ts', '.py')")
count_of_record = fetch(rs_1, n=-1)
head(count_of_record)
developers <- unique(count_of_record$AuthorEmail)
developers
developers[0]
first(developers)
plot(count_of_record$LinesOfCode)
plot(count_of_record$LinesOfCode, count_of_record$Date)
plot(y=count_of_record$LinesOfCode, x=count_of_record$Date)
plot(y=count_of_record$LinesOfCode, x=as.numeric(count_of_record$Date))
plot(x=count_of_record$LinesOfCode, y=count_of_record$Date)
ggplot(aes(x=count_of_record$LinesOfCode, y=count_of_record$Date))+geom_point()
ggplot(count_of_record, aes(x=LinesOfCode, y=Date))+geom_point()
ggplot(count_of_record, aes(y=LinesOfCode, x=Date))+geom_point()
count_by_date = count_of_record[order(Date)]
count_by_date = count_of_record[order(Date), ]
count_by_date = count_of_record[order('Date'), ]
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_point()
count_by_date = count_of_record[order(count_of_record$Date), ]
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_point()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_line()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_abline()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_area()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_density()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_density()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_bar()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_histogram()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_bin2d()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_curve()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_density_2d()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_col()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_col()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_col()
rs_1 = dbSendQuery(mydb,"select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4")
mydb = dbConnect(MySQL(), user='root', password='Sch..l1234', dbname='issuesminer', host='localhost')
pid_ = 4;
rs_1 = dbSendQuery(mydb,"select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4")
count_of_record = fetch(rs_1, n=-1)
count_by_date = count_of_record[order(count_of_record$Date), ]
developers <- unique(count_of_record$AuthorEmail)
developers
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_point()
rs_1 = dbSendQuery(mydb,"select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4 AND
Extension IN ('.cpp', '.cs', '.php', '.java', '.cxx', '.hpp','.js','.d', '.fs', '.vb', '.ts', '.py')")
count_of_record = fetch(rs_1, n=-1)
count_by_date = count_of_record[order(count_of_record$Date), ]
developers <- unique(count_of_record$AuthorEmail)
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_line()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_line()
ggplot(count_by_date, aes(y=LinesOfCode, x=Date))+geom_point()
developers
rs_1 = dbSendQuery(mydb,"select
Id,
ProjectId,
Date,
Alias,
ProjectLOC,
CommitterId,
Extension,
CommitId,
AuthorEmail,
AddedCodeLines,
RemovedCodeLines,
LinesOfCode,
status from VCSFileRevision where projectId = 4"
# AND
# Extension IN ('.cpp', '.cs', '.php', '.java', '.cxx', '.hpp','.js','.d', '.fs', '.vb', '.ts', '.py')
)
count_of_record = fetch(rs_1, n=-1)
